/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Init.java
 *
 * Created on 27/11/2010, 17:55:19
 */

package br.com.furb.engenhariasoftware.gui;

import java.awt.Color;
import java.awt.Component;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;

import javax.swing.JOptionPane;

import br.com.furb.engenhariasoftware.bussiness.BusinessBusinessRule;
import br.com.furb.engenhariasoftware.bussiness.BusinessFunctionalRequisite;
import br.com.furb.engenhariasoftware.bussiness.BusinessHtmlReport;
import br.com.furb.engenhariasoftware.bussiness.BusinessImplementationRule;
import br.com.furb.engenhariasoftware.bussiness.BusinessProject;
import br.com.furb.engenhariasoftware.bussiness.BusinessSweepSourceCode;
import br.com.furb.engenhariasoftware.bussiness.BusinessUseCase;
import br.com.furb.engenhariasoftware.entity.Project;
import br.com.furb.engenhariasoftware.exception.CoreException;
import br.com.furb.engenhariasoftware.gui.constants.Constants;
import br.com.furb.engenhariasoftware.gui.util.CurrentProject;
import br.com.furb.engenhariasoftware.gui.util.CurrentUser;
import br.com.furb.sistemasseguros.security.bussiness.BussinessAccessControl;

/**
 *
 * @author Marcos
 */
public class Init extends javax.swing.JFrame {

    /** Creates new form Init */
    public Init() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu(); // Menu projeto
        jMenuItem1 = new javax.swing.JMenuItem(); // Item carregar
        jMenuItem2 = new javax.swing.JMenuItem(); // Item novo
        jMenu2 = new javax.swing.JMenu(); // Menu cadastros
        jMenuItem3 = new javax.swing.JMenuItem(); // Item requisitos funcionais
        jMenuItem4 = new javax.swing.JMenuItem(); // Item casos de uso
        jMenuItem5 = new javax.swing.JMenuItem(); // Item regras de negócio
        jMenuItem6 = new javax.swing.JMenuItem(); // Item regras de implementação
        jMenu3 = new javax.swing.JMenu(); // Menu consultas
        jMenuItem7 = new javax.swing.JMenuItem(); // Item requisitos funcionais
        jMenuItem8 = new javax.swing.JMenuItem(); // Item casos de uso
        jMenuItem9 = new javax.swing.JMenuItem(); // Item regras de negócio
        jMenuItem10 = new javax.swing.JMenuItem(); // Item regras de implementação
        jMenu4 = new javax.swing.JMenu(); // Menu relatórios
        jMenuItem11 = new javax.swing.JMenuItem(); // Item gerar relatório rastreabilidade

        
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Use Case Traceability");
        setResizable(false);
        setLocationByPlatform(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        
        jMenu1.setText("Projeto");

        jMenuItem1.setText("Abrir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Novo");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Cadastros");

        jMenuItem3.setText("Requisitos Funcionais");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuItem4.setText("Casos de Uso");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem4);

        jMenuItem5.setText("Regras de Negï¿½cio");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem6.setText("Regras de Implementaï¿½ï¿½o");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Consultas");

        jMenuItem7.setText("Requisitos Funcionais");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem7);

        jMenuItem8.setText("Casos de Uso");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem8);

        jMenuItem9.setText("Regras de Negï¿½cio");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem9);

        jMenuItem10.setText("Regras de Implementaï¿½ï¿½o");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem10);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Relatï¿½rios");

        jMenuItem11.setText("Gerar Relatï¿½rio de Rastreabilidade");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem11);

        jMenuBar1.add(jMenu4);

        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
            	jMenu2ActionPerformed(e);
            }
            
            @Override
            public void mouseDragged(MouseEvent e) {
            	//jMenu2ActionPerformed(e);
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {
            	//jMenu2ActionPerformed(e);
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
            	//jMenu2ActionPerformed(e);
            }
            
            @Override
            public void mousePressed(MouseEvent e) {
            	//jMenu2ActionPerformed(e);
            }
            
            @Override
            public void mouseReleased(MouseEvent e) {
            	jMenu2ActionPerformed(e);
            }
        });
        
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
            	jMenu3ActionPerformed(e);
            }
            
            @Override
            public void mouseDragged(MouseEvent e) {
            	//jMenu3ActionPerformed(e);
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {
            	//jMenu3ActionPerformed(e);
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
            	//jMenu3ActionPerformed(e);
            }
            
            @Override
            public void mousePressed(MouseEvent e) {
            	//jMenu3ActionPerformed(e);
            }
            
            @Override
            public void mouseReleased(MouseEvent e) {
            	jMenu3ActionPerformed(e);
            }
        });
        
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
            	jMenu4ActionPerformed(e);
            }
            
            @Override
            public void mouseDragged(MouseEvent e) {
            	//jMenu4ActionPerformed(e);
            }
            
            @Override
            public void mouseEntered(MouseEvent e) {
            	//jMenu4ActionPerformed(e);
            }
            
            @Override
            public void mouseExited(MouseEvent e) {
            	//jMenu4ActionPerformed(e);
            }
            
            @Override
            public void mousePressed(MouseEvent e) {
            	//jMenu4ActionPerformed(e);
            }
            
            @Override
            public void mouseReleased(MouseEvent e) {
            	jMenu4ActionPerformed(e);
            }
        });
        
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        
        jPanel1.setBackground(Color.GRAY);
        pack();
    }// </editor-fold>

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {
    	try{
    		ProjectLoad pl = new ProjectLoad();
        	BusinessProject bp = new BusinessProject();
        	pl.setDadosComboboxProjetos(bp.getAllProjects());
            this.setNewView(pl);
    	}catch (CoreException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}
    }

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {
    	ProjectRegister pr = new ProjectRegister();
        this.setNewView(pr);
    }

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {
        FunctionalRequisiteRegister frr = new FunctionalRequisiteRegister();
        this.setNewView(frr);
    }

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {
    	UseCaseRegister ucr = new UseCaseRegister();
        this.setNewView(ucr);
    }

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {
    	BusinessRuleRegister brr = new BusinessRuleRegister();
        this.setNewView(brr);
    }

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {
    	ImplementationRuleRegister irr = new ImplementationRuleRegister();
        this.setNewView(irr);
    }

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {
    	try{
    		BusinessFunctionalRequisite bfr = new BusinessFunctionalRequisite();
    		FunctionalRequisiteCrud frc = new FunctionalRequisiteCrud();
    		frc.setDadosCombo(bfr.getAllFunctionalRequisite());
            this.setNewView(frc);
    	}catch (CoreException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}
    }

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {
    	try{
    		BusinessUseCase buc = new BusinessUseCase();
    		UseCaseCrud ucc = new UseCaseCrud();
    		ucc.setDadosCombo(buc.getAllUseCase());
            this.setNewView(ucc);
    	}catch (CoreException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}
    }

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {
    	try{
    		BusinessBusinessRule bbr = new BusinessBusinessRule();
    		BusinessRuleCrud brc = new BusinessRuleCrud();
    		brc.setDadosCombo(bbr.getAllBusinessRule());
            this.setNewView(brc);
    	}catch (CoreException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}
    }

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {
    	try{
    		BusinessImplementationRule bir = new BusinessImplementationRule();
    		ImplementationRuleCrud irc = new ImplementationRuleCrud();
    		irc.setDadosCombo(bir.getAllImplementationRule());
            this.setNewView(irc);
    	}catch (CoreException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}
    }
    
    private void jMenu2ActionPerformed(java.awt.event.MouseEvent evt) {
    	if(CurrentProject.getCurrentProject() == null) {
    		jMenuItem3.setEnabled(false);
        	jMenuItem4.setEnabled(false);
        	jMenuItem5.setEnabled(false);
        	jMenuItem6.setEnabled(false);
    	}else {
	    	BussinessAccessControl accessControl = new BussinessAccessControl();
	        try{
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
		        									   ,Constants.FUNCTIONAL_REQUISITE_SAVE)){
		        	jMenuItem3.setEnabled(false);
		        }
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						   							   ,Constants.USE_CASE_SAVE)){
		        	jMenuItem4.setEnabled(false);
				}
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						   							   ,Constants.BUSINESS_RULE_SAVE)){
		        	jMenuItem5.setEnabled(false);
				}
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						   							   ,Constants.IMPLEMENTATION_RULE_SAVE)){
		        	jMenuItem6.setEnabled(false);
				}
	        }catch(Exception ex){
	        	JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
	        }
        }
    }
    
    private void jMenu3ActionPerformed(java.awt.event.MouseEvent evt) {
    	if(CurrentProject.getCurrentProject() == null) {
        	jMenuItem7.setEnabled(false);
        	jMenuItem8.setEnabled(false);
        	jMenuItem9.setEnabled(false);
        	jMenuItem10.setEnabled(false);
    	}else {
	    	BussinessAccessControl accessControl = new BussinessAccessControl();
	        
	        try{
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.FUNCTIONAL_REQUISITE_VIEW)){
		        	jMenuItem7.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.USE_CASE_VIEW)){
					jMenuItem8.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.BUSINESS_RULE_VIEW)){
					jMenuItem9.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.IMPLEMENTATION_RULE_VIEW)){
					jMenuItem10.setEnabled(false);
				}
	        }catch(Exception ex){
	        	JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
	        }
    	}
    }
    
    private void jMenu4ActionPerformed(java.awt.event.MouseEvent evt) {
    	if(CurrentProject.getCurrentProject() == null) {
        	jMenuItem11.setEnabled(false);
    	}else {
	    	BussinessAccessControl accessControl = new BussinessAccessControl();
	        try{
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						,Constants.TRACEABILITY_REPORT_GENERATE)){
					jMenuItem11.setEnabled(false);
				}
	        }catch(Exception ex){
	        	JOptionPane.showMessageDialog(null, ex.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
	        }
    	}
    }
    
    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {
		try {
			BusinessProject bp = new BusinessProject();
			BusinessSweepSourceCode bsc = new BusinessSweepSourceCode();
			BusinessHtmlReport report = new BusinessHtmlReport();
			
			Project project = bp.getProjectById(CurrentProject.getCurrentProject().getId());
			bsc.sweepSourceTraceability(project);
			report.generateHtmlReport(project);
		}catch (CoreException e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}catch (Exception e) {
			JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
		}
    }

    public void setNewView(Component view){
    	this.jPanel1.setLayout(new GridLayout(1, 1));
        this.jPanel1.removeAll();
    	this.jPanel1.add(view);
     	this.jPanel1.revalidate();
     	this.jPanel1.repaint();
    }
    
    // Variables declaration - do not modify
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration

    private void assignMenuPermissions(){
    	
    	if(CurrentProject.getCurrentProject() == null) {
    		this.jMenuItem3.setEnabled(false);
        	this.jMenuItem4.setEnabled(false);
        	this.jMenuItem5.setEnabled(false);
        	this.jMenuItem6.setEnabled(false);
        	
        	this.jMenuItem7.setEnabled(false);
        	this.jMenuItem8.setEnabled(false);
        	this.jMenuItem9.setEnabled(false);
        	this.jMenuItem10.setEnabled(false);
        	
        	this.jMenuItem11.setEnabled(false);
    	}else {
	    	BussinessAccessControl accessControl = new BussinessAccessControl();
	        
	        // Validação das permissões do usuário
	        try{
	        	// CREATE
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
		        									   ,Constants.FUNCTIONAL_REQUISITE_SAVE)){
		        	jMenuItem3.setEnabled(false);
		        }
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						   							   ,Constants.USE_CASE_SAVE)){
		        	jMenuItem4.setEnabled(false);
				}
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						   							   ,Constants.BUSINESS_RULE_SAVE)){
		        	jMenuItem5.setEnabled(false);
				}
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						   							   ,Constants.IMPLEMENTATION_RULE_SAVE)){
		        	jMenuItem6.setEnabled(false);
				}
		        
		        // READ
		        if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.FUNCTIONAL_REQUISITE_VIEW)){
		        	jMenuItem7.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.USE_CASE_VIEW)){
					jMenuItem8.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.BUSINESS_RULE_VIEW)){
					jMenuItem9.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
									   ,Constants.IMPLEMENTATION_RULE_VIEW)){
					jMenuItem10.setEnabled(false);
				}
				if(!accessControl.validateAccessControl(CurrentUser.getCurrentUser().getLogin()
						,Constants.TRACEABILITY_REPORT_GENERATE)){
					jMenuItem11.setEnabled(false);
				}
	        }catch(Exception e){
	        	JOptionPane.showMessageDialog(null, e.getMessage(), "Erro!", JOptionPane.ERROR_MESSAGE);
	        }
    	}
    }
}
